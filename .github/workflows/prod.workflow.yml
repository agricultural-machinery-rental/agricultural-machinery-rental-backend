name: Build and deploy to production
on:
  push:
    branches:
      - feature/deploy
jobs:
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Generate .env
        uses: SpicyPizza/create-envfile@v2.0
        with:
          DEBUG: false
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_SERVER: ${{ secrets.POSTGRES_SERVER }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          build-args: ENV_FILE=.env
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/amr:latest
      - name: Copy .env file to server using SCP
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_LOGIN }}
          password: ${{ secrets.SERVER_PASSWORD }}
          source: ".env"
          target: ${{ secrets.TARGET_SERVER_PATH }}

  deploy:
    name: Deploy from image in Docker Hub
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_LOGIN }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd deploy
            docker-compose stop
            docker-compose rm -f backend
            docker rmi $(docker images '${{ secrets.DOCKER_USERNAME }}/amr' -q)
            docker-compose up -d
            docker-compose exec backend python manage.py migrate
